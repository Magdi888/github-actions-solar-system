name: Solar System Workflow
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
    
jobs:
    unit-testing:
        name: Unit Testing
        container: 
          image: node:20
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: NPM custom action
          uses: ./.github/workflows/custom-action/node-modules
          with:
            node-modules-dir: ~/.npm

        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 18
    
        - name: NPM custom action
          uses: ./.github/workflows/custom-action/node-modules
          with:
            node-modules-dir: ~/.npm
            
        - name: Code Coverage
          continue-on-error: true
          run: npm run coverage
        
        - name: Archive Code Coverage Result
          uses: actions/upload-artifact@v3
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5
    docker:
      name: Dockerize App
      outputs:
        github_user: ${{ steps.github-user.outputs.OWNER_LC }}
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      permissions: 
        packages: write
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: set lower case owner name
          id: github-user
          run: |
              echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
              echo "OWNER_LC=${OWNER,,}" >>${GITHUB_OUTPUT}
          env:
              OWNER: '${{ github.repository_owner }}'
        -
          name: Login to GitLab
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
        -
          name: Build and push
          uses: docker/build-push-action@v5
          with:
            push: true
            context: .
            tags: ghcr.io/${{ env.OWNER_LC }}/solar-system:${{ github.sha }}

    dev-deploy:
      name: Deploy on Dev Env
      needs: docker
      env:
        OWNER: ${{ needs.docker.outputs.github_user }}
      environment: 
        name: development
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Install Kubectl
          uses: azure/setup-kubectl@v3
          with:
            version: v1.26.0
        
        - name: Add KUBECONFIG
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig : ${{ secrets.KUBECONFIG }}
        
        - name: Check Kubectl version
          run: 
            |
            kubectl version --short -o yaml
        - name: Get Ingress IP
          run:
            |
              echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >>${GITHUB_ENV}
        

        - name: Replace Placeholders
          uses: cschleiden/replace-tokens@v1
          with:
            files: '[kubernetes/development/*.yaml]'
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
          env:
            NAMESPACE: ${{ vars.NAMESPACE }}
            REPLICAS: ${{ vars.REPLICAS }}
            IMAGE: ghcr.io/${{ env.OWNER }}/solar-system:${{ github.sha }}
            INGRESS_IP: ${{ env. INGRESS_IP}}
        - name: Check Files
          run: 
            |
            cat kubernetes/development/*.yaml
        # - name: Get Ingress URL
        # run:
        #   |
        #     echo "INGRESS_URL=$(kubectl)"
    
    integration-test:
      needs: dev-deploy
      name: Dev-Integration Test
      uses: ./.github/workflows/reusable-workflow.yml
      with:
        ingress-url: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }}
      



